pub extern "gdi32" stdcallcc fn StretchDIBits(hdc: HDC, xDest: c_int, yDest: c_int, DestWidth: c_int, DestHeight: c_int, xSrc: c_int, ySrc: c_int, SrcWidth: c_int, SrcHeight: c_int, lpBits: ?*const c_void, lpbmi: ?*const BITMAPINFO, iUsage: UINT, rop: DWORD) c_int;
pub extern "user32" stdcallcc fn GetMessageA(lpMsg: LPMSG, hWnd: HWND, wMsgFilterMin: UINT, wMsgFilterMax: UINT) BOOL;
pub extern "user32" stdcallcc fn TranslateMessage(lpMsg: ?*const MSG) BOOL;
pub extern "user32" stdcallcc fn DispatchMessageA(lpMsg: ?*const MSG) LRESULT;
pub extern "user32" stdcallcc fn PeekMessageA(lpMsg: LPMSG, hWnd: HWND, wMsgFilterMin: UINT, wMsgFilterMax: UINT, wRemoveMsg: UINT) BOOL;
pub extern "user32" stdcallcc fn SendMessageA(hWnd: HWND, Msg: UINT, wParam: WPARAM, lParam: LPARAM) LRESULT;
pub extern "user32" stdcallcc fn DefWindowProcA(hWnd: HWND, Msg: UINT, wParam: WPARAM, lParam: LPARAM) LRESULT;
pub extern "user32" stdcallcc fn RegisterClassA(lpWndClass: ?*const WNDCLASSA) ATOM;
pub extern "user32" stdcallcc fn CreateWindowExA(dwExStyle: DWORD, lpClassName: LPCSTR, lpWindowName: LPCSTR, dwStyle: DWORD, X: c_int, Y: c_int, nWidth: c_int, nHeight: c_int, hWndParent: HWND, hMenu: HMENU, hInstance: HINSTANCE, lpParam: LPVOID) HWND;
pub extern "user32" stdcallcc fn DestroyWindow(hWnd: HWND) BOOL;
pub extern "user32" stdcallcc fn ShowWindow(hWnd: HWND, nCmdShow: c_int) BOOL;
pub extern "user32" stdcallcc fn GetDC(hWnd: HWND) HDC;
pub extern "user32" stdcallcc fn ReleaseDC(hWnd: HWND, hDC: HDC) c_int;
pub extern "user32" stdcallcc fn InvalidateRect(hWnd: HWND, lpRect: ?*const RECT, bErase: BOOL) BOOL;
pub extern "user32" stdcallcc fn ValidateRect(hWnd: HWND, lpRect: ?*const RECT) BOOL;
pub extern "user32" stdcallcc fn AdjustWindowRect(lpRect: LPRECT, dwStyle: DWORD, bMenu: BOOL) BOOL;
pub extern "user32" stdcallcc fn AdjustWindowRectEx(lpRect: LPRECT, dwStyle: DWORD, bMenu: BOOL, dwExStyle: DWORD) BOOL;
pub extern "user32" stdcallcc fn AdjustWindowRectExForDpi(lpRect: LPRECT, dwStyle: DWORD, bMenu: BOOL, dwExStyle: DWORD, dpi: UINT) BOOL;
pub extern "user32" stdcallcc fn LoadCursorA(hInstance: HINSTANCE, lpCursorName: LPCSTR) HCURSOR;